// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/handler/loan.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoanHandler is a mock of LoanHandler interface.
type MockLoanHandler struct {
	ctrl     *gomock.Controller
	recorder *MockLoanHandlerMockRecorder
}

// MockLoanHandlerMockRecorder is the mock recorder for MockLoanHandler.
type MockLoanHandlerMockRecorder struct {
	mock *MockLoanHandler
}

// NewMockLoanHandler creates a new mock instance.
func NewMockLoanHandler(ctrl *gomock.Controller) *MockLoanHandler {
	mock := &MockLoanHandler{ctrl: ctrl}
	mock.recorder = &MockLoanHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanHandler) EXPECT() *MockLoanHandlerMockRecorder {
	return m.recorder
}

// ApproveLoanHandler mocks base method.
func (m *MockLoanHandler) ApproveLoanHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ApproveLoanHandler", w, r)
}

// ApproveLoanHandler indicates an expected call of ApproveLoanHandler.
func (mr *MockLoanHandlerMockRecorder) ApproveLoanHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApproveLoanHandler", reflect.TypeOf((*MockLoanHandler)(nil).ApproveLoanHandler), w, r)
}

// DisburseLoanHandler mocks base method.
func (m *MockLoanHandler) DisburseLoanHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DisburseLoanHandler", w, r)
}

// DisburseLoanHandler indicates an expected call of DisburseLoanHandler.
func (mr *MockLoanHandlerMockRecorder) DisburseLoanHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisburseLoanHandler", reflect.TypeOf((*MockLoanHandler)(nil).DisburseLoanHandler), w, r)
}

// GetAgreementLetterHandler mocks base method.
func (m *MockLoanHandler) GetAgreementLetterHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAgreementLetterHandler", w, r)
}

// GetAgreementLetterHandler indicates an expected call of GetAgreementLetterHandler.
func (mr *MockLoanHandlerMockRecorder) GetAgreementLetterHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgreementLetterHandler", reflect.TypeOf((*MockLoanHandler)(nil).GetAgreementLetterHandler), w, r)
}

// GetListApprovedLoanHandler mocks base method.
func (m *MockLoanHandler) GetListApprovedLoanHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetListApprovedLoanHandler", w, r)
}

// GetListApprovedLoanHandler indicates an expected call of GetListApprovedLoanHandler.
func (mr *MockLoanHandlerMockRecorder) GetListApprovedLoanHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListApprovedLoanHandler", reflect.TypeOf((*MockLoanHandler)(nil).GetListApprovedLoanHandler), w, r)
}

// GetListLenderHandler mocks base method.
func (m *MockLoanHandler) GetListLenderHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetListLenderHandler", w, r)
}

// GetListLenderHandler indicates an expected call of GetListLenderHandler.
func (mr *MockLoanHandlerMockRecorder) GetListLenderHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListLenderHandler", reflect.TypeOf((*MockLoanHandler)(nil).GetListLenderHandler), w, r)
}

// GetLoanByUIDHandler mocks base method.
func (m *MockLoanHandler) GetLoanByUIDHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetLoanByUIDHandler", w, r)
}

// GetLoanByUIDHandler indicates an expected call of GetLoanByUIDHandler.
func (mr *MockLoanHandlerMockRecorder) GetLoanByUIDHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanByUIDHandler", reflect.TypeOf((*MockLoanHandler)(nil).GetLoanByUIDHandler), w, r)
}

// GetProofPictureHandler mocks base method.
func (m *MockLoanHandler) GetProofPictureHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetProofPictureHandler", w, r)
}

// GetProofPictureHandler indicates an expected call of GetProofPictureHandler.
func (mr *MockLoanHandlerMockRecorder) GetProofPictureHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProofPictureHandler", reflect.TypeOf((*MockLoanHandler)(nil).GetProofPictureHandler), w, r)
}

// ProposeLoanHandler mocks base method.
func (m *MockLoanHandler) ProposeLoanHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProposeLoanHandler", w, r)
}

// ProposeLoanHandler indicates an expected call of ProposeLoanHandler.
func (mr *MockLoanHandlerMockRecorder) ProposeLoanHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProposeLoanHandler", reflect.TypeOf((*MockLoanHandler)(nil).ProposeLoanHandler), w, r)
}

// SimulateLoanHandler mocks base method.
func (m *MockLoanHandler) SimulateLoanHandler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SimulateLoanHandler", w, r)
}

// SimulateLoanHandler indicates an expected call of SimulateLoanHandler.
func (mr *MockLoanHandlerMockRecorder) SimulateLoanHandler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SimulateLoanHandler", reflect.TypeOf((*MockLoanHandler)(nil).SimulateLoanHandler), w, r)
}
